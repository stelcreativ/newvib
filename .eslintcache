[{"/Users/stella/newvibe/src/index.js":"1","/Users/stella/newvibe/src/reportWebVitals.js":"2","/Users/stella/newvibe/src/App.js":"3","/Users/stella/newvibe/src/components/UploadForm.js":"4","/Users/stella/newvibe/src/navigation/Navbar.js":"5","/Users/stella/newvibe/src/components/users/Profile.js":"6","/Users/stella/newvibe/src/components/Home.js":"7","/Users/stella/newvibe/src/firebase/config.js":"8","/Users/stella/newvibe/src/components/ProgressBar.js":"9","/Users/stella/newvibe/src/hooks/useStorage.js":"10","/Users/stella/newvibe/src/components/auth/SignUp.js":"11","/Users/stella/newvibe/src/components/auth/SignIn.js":"12","/Users/stella/newvibe/src/components/auth/Auth.js":"13","/Users/stella/newvibe/src/components/auth/ForgotPassword.js":"14","/Users/stella/newvibe/src/components/auth/PrivateRoute.js":"15","/Users/stella/newvibe/src/components/sharing/ShareScreen.js":"16","/Users/stella/newvibe/src/components/sharing/PostShare.js":"17","/Users/stella/newvibe/src/redux/actions/shareActions.js":"18","/Users/stella/newvibe/src/hooks/hookFirestore.js":"19","/Users/stella/newvibe/src/redux/reducers/rootReducer.js":"20","/Users/stella/newvibe/src/redux/reducers/shareReducer.js":"21","/Users/stella/newvibe/src/components/sharing/DeleteShare.js":"22","/Users/stella/newvibe/src/components/users/StaticProfile.js":"23","/Users/stella/newvibe/src/components/sharing/EditProfil.js":"24"},{"size":1033,"mtime":1619699599000,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1610503114000,"results":"27","hashOfConfig":"26"},{"size":1347,"mtime":1626465204000,"results":"28","hashOfConfig":"26"},{"size":1014,"mtime":1617787530000,"results":"29","hashOfConfig":"26"},{"size":1240,"mtime":1626906585000,"results":"30","hashOfConfig":"26"},{"size":11958,"mtime":1626643736000,"results":"31","hashOfConfig":"26"},{"size":4371,"mtime":1627479935000,"results":"32","hashOfConfig":"26"},{"size":921,"mtime":1625832331000,"results":"33","hashOfConfig":"26"},{"size":416,"mtime":1616876036000,"results":"34","hashOfConfig":"26"},{"size":946,"mtime":1619433887000,"results":"35","hashOfConfig":"26"},{"size":4712,"mtime":1626549842000,"results":"36","hashOfConfig":"26"},{"size":2651,"mtime":1626549720000,"results":"37","hashOfConfig":"26"},{"size":648,"mtime":1679495916635,"results":"38","hashOfConfig":"26"},{"size":2383,"mtime":1625135631000,"results":"39","hashOfConfig":"26"},{"size":543,"mtime":1617138753000,"results":"40","hashOfConfig":"26"},{"size":3647,"mtime":1679496297611,"results":"41","hashOfConfig":"26"},{"size":4476,"mtime":1626641119000,"results":"42","hashOfConfig":"26"},{"size":516,"mtime":1656622896107,"results":"43","hashOfConfig":"26"},{"size":658,"mtime":1619435985000,"results":"44","hashOfConfig":"26"},{"size":346,"mtime":1621514831000,"results":"45","hashOfConfig":"26"},{"size":481,"mtime":1626644349000,"results":"46","hashOfConfig":"26"},{"size":3568,"mtime":1626568303000,"results":"47","hashOfConfig":"26"},{"size":4513,"mtime":1679495228612,"results":"48","hashOfConfig":"26"},{"size":6489,"mtime":1626550620000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1jbua7m",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},"/Users/stella/newvibe/src/index.js",[],["107","108"],"/Users/stella/newvibe/src/reportWebVitals.js",[],["109","110"],"/Users/stella/newvibe/src/App.js",[],"/Users/stella/newvibe/src/components/UploadForm.js",[],["111","112"],"/Users/stella/newvibe/src/navigation/Navbar.js",["113","114"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n\n\nconst Navbar = () => {\n\n    useEffect(() => {\n        const M = window.M;\n        var sidenav = document.querySelectorAll(\".sidenav\");\n        M.Sidenav.init(sidenav, {});\n    }, []);\n\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n            <div className=\"container\">\n                <a className=\"brand-logo\">NewVibe</a>\n                <ul className=\"right  hide-on-med-and-down\">\n                    <li><Link to='/'>Home</Link></li>\n                    <li><Link to='/SignUp'>Sign Up</Link></li>\n                    <li><Link to='/SignIn'>Sign In</Link></li>\n                    <li><Link to='/Profile'>Profile</Link></li>\n                </ul>\n\n            </div>\n\n            <ul className=\"sidenav\" id=\"mobile-demo\">\n                <li><Link to='/'>Home</Link></li>\n                <li><Link to='/SignUp'>Sign Up</Link></li>\n                <li><Link to='/SignIn'>Sign In</Link></li>\n                <li><Link to='/Profile'>Profile</Link></li>\n            </ul>\n        </nav>\n\n\n    )\n}\n\n\n\n\n\nexport default Navbar","/Users/stella/newvibe/src/components/users/Profile.js",["115","116","117","118"],"import React, { useState, useContext, useEffect, Fragment } from 'react'\nimport { Container, Card, Typography, Paper, Button } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditIcon from '@material-ui/icons/Edit'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport firebase from \"../../firebase/config\"\nimport { projectFirestore } from '../../firebase/config'\nimport { projectStorage } from '../../firebase/config'\nimport { connect } from 'react-redux'\nimport { AuthContext } from '../auth/Auth'\nimport { Link } from 'react-router-dom'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport LocationOn from '@material-ui/icons/LocationOn'\nimport CallIcon from '@material-ui/icons/Call';\nimport blue from '@material-ui/core/colors/blue'\nimport ShareScreen from '../sharing/ShareScreen'\n\n\nconst styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(400 + theme.spacing(3) * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        }\n    },\n\n    paper: {\n        marginTop: theme.spacing(8),\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        display: 'flex',\n        maxWidth: 400,\n        flexDirection: 'column',\n        alignItems: 'center',\n        palette: {\n            primary: blue,\n        },\n        '& .image-wrap': {\n            textAlign: 'center',\n            position: 'relative',\n\n            '& button': {\n                position: 'absolute',\n                top: '80%',\n                left: '70%'\n            }\n        },\n\n\n        '& .user-image': {\n            width: 200,\n            height: 200,\n            objectFit: 'cover',\n            maxWidth: '100%',\n            borderRadius: '50%'\n        },\n        '& .profile-details': {\n            textAlign: 'center',\n            '& span, svg': {\n                verticalAlign: 'middle'\n            }\n        },\n\n\n        '& .options': {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center'\n        }\n    },\n    card: {\n        display: 'flex',\n        position: 'relative',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 20,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n\n\n})\n\nconst Profile = props => {\n    const { classes } = props\n\n    const { currentUser } = useContext(AuthContext)\n    const [shares, setShares] = useState([])\n    const [userData, setUserData] = useState()\n    const [userImg, setUserImg] = useState()\n    const [file, setFile] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [progress, setProgress] = useState(0)\n    const [error, setError] = useState(null)\n    const [url, setUrl] = useState(null)\n\n    const types = ['image/png', 'image/jpeg']\n\n    const onSignout = async () => {\n        await firebase.auth().signOut\n    }\n\n    const collectionRef = projectFirestore.collection('shares')\n\n\n\n    const getUser = async () => {\n        projectFirestore\n            .collection('users')\n            .doc(currentUser.uid)\n            .get()\n            .then((documentSnapshot) => {\n                if (documentSnapshot.exists) {\n                    console.log('User Data', documentSnapshot.data())\n                    setUserData(documentSnapshot.data())\n                }\n            })\n    }\n\n    useEffect(() => {\n        getUser()\n        fetchShares()\n    }, [])\n\n    //Update User Image\n    const collectionUser = projectFirestore.collection('users')\n\n    const updateHandler = async () => {\n        let imageUrl = await handleUploadPicture()\n        if (imageUrl == null && userData.userImg) {\n            imageUrl = userData.userImg\n        }\n\n\n\n        collectionUser\n            .doc(currentUser.uid)\n            .update({\n                userImg: imageUrl,\n\n            })\n            .then(() => {\n                console.log('User Image Updated!')\n                alert('Profile image updated!')\n\n            })\n            .catch((error) => {\n                console.log('Something went wrong', error)\n            })\n        setUserImg(userImg)\n        return userImg\n    }\n\n\n\n    const handleImageChange = (e) => {\n        let selected = e.target.files[0]\n\n        if (selected && types.includes(selected.type)) {\n            setFile(selected)\n            setError('')\n        } else {\n            setFile(null)\n            setError('Please select an image file (png or jpeg')\n        }\n    }\n\n\n    const handleUploadPicture = async () => {\n        if (file == null) {\n            return <img src='https://via.placeholder.com/150'></img>\n        }\n        const storageRef = projectStorage.ref(`user-images/${file.name}`)\n        storageRef.put(file)\n            .on('state_changed', (snapshot) => {\n                let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                setProgress(\n                    Math.round(percentage))\n            }, (err) => {\n                setError(err)\n            }, async () => {\n                const url = await storageRef.getDownloadURL()\n                setUrl(url)\n\n            }\n\n            )\n        return { url }\n    }\n\n\n    //Display shares for connected user\n    const fetchShares = async () => {\n        try {\n            const list = []\n            await collectionRef\n                .where('userId', '==', currentUser.uid)\n                .get()\n                .then((querySnapshot) => {\n                    querySnapshot.forEach((doc) => {\n                        const {\n                            userId,\n                            url,\n                            title,\n                            content,\n                            likes,\n                            comments\n                        } = doc.data()\n                        list.push({\n                            shareId: doc.id,\n                            userId,\n                            url,\n                            title,\n                            content,\n                            likes,\n                            comments\n                        })\n                    })\n                })\n            setShares(list)\n            if (loading) {\n                setLoading(false)\n            }\n            console.log('Shares: ', shares)\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n\n    if (loading) return <CircularProgress />\n\n    return (\n        <Container component='main' maxWidth=\"xm\">\n            <Card className={classes.card}>\n                <Paper className={classes.paper}\n                    color=\"primary\">\n                    <h3>Newvibe</h3>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Welcome {userData ? userData.firstname : 'Your Name'}\n                        <br />\n                        {userData ? userData.lastname : 'Your Lastname'}\n                    </Typography>\n\n                    <h4>Share amazing memories</h4>\n\n                    <div className=\"img-wrap\">\n                        <div className=\"user-image\">\n\n                            {url !== null ? <img src={userData ? userData.userImg : 'https://via.placeholder.com/150'} alt='upload-img' className=\"profile-image\"\n                                style={{ width: 145, height: 150, alignSelf: \"center\" }}\n\n                            /> : <img src={'https://via.placeholder.com/150'} />}\n                            <input type=\"file\" onChange={handleImageChange} />\n\n                            <Tooltip title=\"Edit profile image\" placement=\"top\">\n                                <IconButton onClick={handleUploadPicture} className=\"button\">\n                                    <EditIcon color=\"primary\" />\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n\n                        <div className=\"upload-progress\"><circularProgress /><Typography>{progress} % uploaded!</Typography></div>\n\n\n\n                        <Button onClick={updateHandler}\n                            className={classes.submit}\n                            type=\"submit\"\n                            fullwidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Update Profil Picture\n                        </Button>\n                    </div>\n\n                    <div className=\"profile-details\">\n                        <Fragment>\n                            {userData ? userData.bio :\n                                <Typography variant=\"body1\">\n                                    BIO\n                                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium odio dolor odit natus unde consequatur magni recusandae ipsum sequi illo similique atque quam commodi quasi modi quas tempore, suscipit ea?\n                                </Typography>\n                            }\n                        </Fragment>\n                        <br />\n                        <Fragment>\n                            <LocationOn color=\"primary\" />\n                            <span>{userData ? userData.city : 'City'}</span>\n\n                        </Fragment>\n\n                        <Typography variant=\"body2\">\n                            <CallIcon color=\"primary\" />\n                            {userData ? userData.telephone : 'telephone'}\n                        </Typography>\n                        <hr />\n\n                        <Typography>{shares.length} Shares</Typography>\n\n                    </div>\n\n\n                    <Fragment>\n                        <div className=\"options\">\n                            <Button\n                                type=\"submit\"\n                                fullwidth\n                                variant=\"contained\"\n                                component={Link}\n                                color=\"primary\"\n                                to=\"/PostShare\"\n                                className={classes.submit}\n\n                            >\n                                Post Share\n                            </Button>\n\n\n                            <Button\n                                type=\"submit\"\n                                fullwidth\n                                variant=\"contained\"\n                                component={Link}\n                                color=\"primary\"\n                                to=\"SignIn\"\n                                className={classes.submit}\n                                onClick={onSignout}\n                            >\n                                Signout\n                            </Button>\n\n\n                            <Button\n                                type=\"submit\"\n                                fullwidth\n                                variant=\"contained\"\n                                component={Link}\n                                color=\"primary\"\n                                to=\"/EditProfil\"\n                                className={classes.submit}\n\n                            >\n                                Edit Profil\n                            </Button>\n                        </div></Fragment>\n                </Paper>\n            </Card>\n            <Card className={classes.card}>\n                <ShareScreen shares={shares} />\n            </Card>\n\n\n        </Container>\n\n\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.firebase.auth.uid\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(Profile))\n","/Users/stella/newvibe/src/components/Home.js",["119","120","121"],"import React, { useState, useEffect, useContext } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { Link } from \"react-router-dom\"\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport { AuthContext } from './auth/Auth'\nimport ShareScreen from './sharing/ShareScreen'\nimport logo from './newv.svg';\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { projectFirestore } from '../firebase/config'\nimport StaticProfile from './users/StaticProfile'\n\n\n\n\nconst styles = theme => ({\n    grid: {\n        marginLeft: 40\n    },\n    card: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 20,\n\n\n    },\n    content: {\n        padding: 25,\n        objectFit: 'cover'\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n})\n\nconst Home = (props) => {\n\n    const { classes } = props\n\n    const [shares, setShares] = useState([])\n    const [loading, setLoading] = useState(true)\n    const { currentUser } = useContext(AuthContext)\n\n    useEffect(() => {\n\n        const fetchShares = async () => {\n\n            try {\n\n                const sharelist = []\n\n                await projectFirestore\n                    .collection('shares')\n                    .orderBy('createdAt', 'desc')\n                    .limit(6)\n                    .get()\n                    .then((querySnapshot) => {\n                        console.log(querySnapshot)\n                        querySnapshot.forEach(doc => {\n                            const { userId, url, title, content, likes, comments } = doc.data()\n                            sharelist.push({\n                                shareId: doc.id,\n                                userId,\n                                url: url,\n                                title: title,\n                                content: content,\n                                likes: null,\n                                comments: null\n                            })\n\n                        })\n                    })\n\n                setShares(sharelist)\n\n                if (loading) {\n                    setLoading(false)\n                }\n\n                console.log('shares: ', sharelist)\n\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        fetchShares()\n\n\n    }, [])\n\n    if (loading) return <CircularProgress />\n\n\n    return (\n\n        <div className=\"container\">\n\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <Grid container spacing={16}>\n                <Grid item sm={6} xs={12}>\n                    <p>Share Life Changing Memories</p>\n\n                    <Card className={classes.card}>\n                        <CardContent className={classes.content}>\n                            {shares && <ShareScreen shares={shares}\n\n                            />}\n                        </CardContent >\n                    </Card>\n\n\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <StaticProfile />\n                    {currentUser && currentUser.uid ?\n                        <Button\n                            type=\"submit\"\n                            fullwidth\n                            variant=\"contained\"\n                            component={Link}\n                            color=\"primary\"\n                            to=\"/PostShare\"\n                            className={classes.submit}\n\n                        >\n                            Post Share\n                        </Button>\n                        :\n                        <Button\n                            type=\"submit\"\n                            fullwidth\n                            variant=\"contained\"\n                            component={Link}\n                            color=\"secondary\"\n                            to=\"/SignUp\"\n                            className={classes.submit}\n\n                        >\n                            Continue\n                        </Button>\n                    }\n\n                </Grid>\n            </Grid>\n\n\n        </div>\n\n    )\n}\n\nexport default withStyles(styles)(Home)","/Users/stella/newvibe/src/firebase/config.js",[],"/Users/stella/newvibe/src/components/ProgressBar.js",["122"],"import React, { useEffect } from 'react'\nimport useStorage from '../hooks/useStorage'\n\nconst ProgressBar = ({ file, setFile }) => {\n    const { url, progress } = useStorage(file)\n\n    useEffect(() => {\n        if (url) {\n            setFile(null)\n        }\n    }, [url], setFile)\n\n    return (\n        <div className=\"progress-bar\" style={{ width: progress + '%' }}>progress</div>\n    )\n}\n\nexport default ProgressBar","/Users/stella/newvibe/src/hooks/useStorage.js",[],"/Users/stella/newvibe/src/components/auth/SignUp.js",[],"/Users/stella/newvibe/src/components/auth/SignIn.js",[],"/Users/stella/newvibe/src/components/auth/Auth.js",[],"/Users/stella/newvibe/src/components/auth/ForgotPassword.js",[],"/Users/stella/newvibe/src/components/auth/PrivateRoute.js",[],"/Users/stella/newvibe/src/components/sharing/ShareScreen.js",["123","124","125","126","127"],"/Users/stella/newvibe/src/components/sharing/PostShare.js",["128"],"import React, { useState, useContext } from 'react'\nimport { Container } from '@material-ui/core'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport bgImg from '../images/imagebg.jpg'\nimport { projectStorage } from '../../firebase/config'\nimport { postShare } from '../../redux/actions/shareActions'\nimport { connect } from 'react-redux'\nimport { AuthContext } from '../auth/Auth'\n\n\n\nconst styles = (theme) => ({\n    main: {\n        width: 'auto',\n        display: 'block',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(400 + theme.spacing(3) * 2)]: {\n            width: 400,\n            marginleft: 'auto',\n            marginLight: 'auto',\n        },\n        postshare: {\n            '& .img-wrap': {\n                textAlign: 'center',\n                position: 'relative'\n            },\n        },\n\n        submit: {\n            marginTop: theme.spacing(3),\n            marginBottom: theme.spacing(3),\n        }\n    }\n})\n\nconst PostShare = (props) => {\n    const { classes } = props\n\n    const { currentUser } = useContext(AuthContext)\n\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n    const [file, setFile] = useState(null)\n    const [error, setError] = useState(null)\n    const [progress, setProgress] = useState(0)\n    const [url, setUrl] = useState(null)\n\n    const types = ['image/png', 'image/jpeg']\n\n    const handleSubmit = async (e) => {\n\n        e.preventDefault()\n\n        const imageUrl = await uploadHandler()\n\n        const share = {\n            userId: currentUser.uid,\n            url: url,\n            createdAt: new Date(),\n            title: title,\n            content: content\n        }\n\n        props.postShare(share)\n        props.history.push('/')\n    }\n\n    const changeHandler = (e) => {\n        let selected = e.target.files[0]\n\n        if (selected && types.includes(selected.type)) {\n            setFile(selected)\n            setError('')\n        } else {\n            setFile(null)\n            setError('Please select an image file (png or jpeg')\n        }\n    }\n\n\n    const uploadHandler = async () => {\n        const storageRef = projectStorage.ref(`share-images/${file.name}`)\n        storageRef.put(file)\n            .on('state_changed', (snapshot) => {\n                let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                setProgress(\n                    Math.round(percentage))\n            }, (err) => {\n                setError(err)\n            }, async () => {\n                const url = await storageRef.getDownloadURL()\n                setUrl(url)\n\n            }\n\n            )\n        return { progress, url, error }\n    }\n\n\n    return (\n        <Container component='main' maxWidth=\"xs\">\n\n            <h1>Share</h1>\n\n            <h2>Here are the Prop Types</h2>\n\n            <h5>Post Share</h5>\n            <div className={classes.postshare}>\n                <div className=\"img-wrap\">\n                    <img src={url || bgImg} alt='upload-img' height=\"300\" width=\"400\" />\n                    <input type=\"file\" onChange={changeHandler} />\n                    <button onClick={uploadHandler}>Upload</button>\n\n                </div>\n\n                <div className=\"progress-bar\">{progress} % uploaded.</div>\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"post-share\">\n                        <div className=\"input-field\">\n                            <label htmlFor=\"title\">My Share</label>\n                            <input type=\"text\" id=\"title\" value={title}\n                                onChange={(e) => setTitle(e.target.value)} />\n                        </div>\n\n                        <div className=\"input-field\">\n                            <label htmlFor=\"content\">Enter story</label>\n                            <textarea id=\"content\" cols=\"30\" rows=\"10\" value={content}\n                                onChange={(e) => setContent(e.target.value)}>Enter Comment</textarea>\n                        </div>\n\n                        <button className=\"btn orange darken-2 z depth-0\" type=\"submit\">Add Sharing</button>\n\n                    </div>\n                </form>\n            </div>\n\n        </Container>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        postShare: (share) => dispatch(postShare(share))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(PostShare))\n","/Users/stella/newvibe/src/redux/actions/shareActions.js",[],"/Users/stella/newvibe/src/hooks/hookFirestore.js",["129"],"/Users/stella/newvibe/src/redux/reducers/rootReducer.js",[],"/Users/stella/newvibe/src/redux/reducers/shareReducer.js",[],"/Users/stella/newvibe/src/components/sharing/DeleteShare.js",[],"/Users/stella/newvibe/src/components/users/StaticProfile.js",["130","131"],"/Users/stella/newvibe/src/components/sharing/EditProfil.js",["132"],"import React, { useState, useEffect, useContext } from 'react'\nimport { projectFirestore } from '../../firebase/config'\nimport { AuthContext } from '../auth/Auth'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport { Container, Paper, Card, Typography } from '@material-ui/core'\n\n\nconst styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(400 + theme.spacing(3) * 2)]: {\n            width: 400,\n            marginleft: 'auto',\n            marginLight: 'auto',\n        }\n    },\n    card: {\n        position: 'relative',\n        padding: 20,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 20,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& .image-wrap': {\n            textAlign: 'center',\n            position: 'relative',\n\n            '& button': {\n                position: 'absolute',\n                top: '80%',\n                left: '70%'\n            }\n        },\n\n        '& .user-image': {\n            width: 200,\n            height: 200,\n            objectFit: 'cover',\n            maxWidth: '100%',\n            borderRadius: '50%'\n        },\n        '& .profile-details': {\n            textAlign: 'center',\n            '& span, svg': {\n                verticalAlign: 'middle'\n            }\n        },\n\n        '& .options': {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center'\n        }\n    },\n\n    submit: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n\n\n})\n\n\n\nconst EditProfil = (props) => {\n\n    const { classes } = props\n\n    const { currentUser } = useContext(AuthContext)\n\n    const [userData, setUserData] = useState(null)\n\n    const getUser = async () => {\n        projectFirestore\n            .collection('users')\n            .doc(currentUser.uid)\n            .get()\n            .then((documentSnapshot) => {\n                if (documentSnapshot.exists) {\n                    console.log('User Data', documentSnapshot.data())\n                    setUserData(documentSnapshot.data())\n                }\n            })\n    }\n\n    useEffect(() => {\n        getUser()\n\n    }, [])\n\n    //Update User Data\n    const collectionUser = projectFirestore.collection('users')\n\n    const updateHandler = async () => {\n\n        collectionUser\n            .doc(currentUser.uid)\n            .update({\n                firstname: userData.firstname,\n                lastname: userData.lastname,\n                email: userData.email,\n                bio: userData.bio,\n                phone: userData.telephone,\n                city: userData.city,\n\n\n            })\n            .then(() => {\n                console.log('User Updated!')\n                alert('Profile updated!')\n                props.history.push('/')\n            })\n            .catch((error) => {\n                console.log('Something went wrong', error)\n            })\n    }\n\n\n\n    return (\n        <Container component='main' maxWidth=\"xm\">\n            <Card className={classes.card}>\n\n                <Paper className={classes.paper}>\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                        {userData ? userData.firstname : 'Your Name'}\n                        <br />\n                        {userData ? userData.lastname : 'Your Lastname'}\n                    </Typography>\n\n                </Paper>\n\n            </Card>\n\n            <Paper>\n                <Card className={classes.card}>\n                    <form onSubmit={e => e.preventDefault() && false}>\n                        <div className=\"update-profile\">\n\n                            <div className=\"input-field\">\n                                <label htmlFor=\"firstname\"></label>\n                                <input name=\"firstname\" type=\"text\" id=\"firstname\"\n                                    value={userData ? userData.firstname : ''} onChange={(e) => setUserData({ ...userData, firstname: e.target.value })} />\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"lastname\"></label>\n                                <input name=\"lastname\" type=\"text\" id=\"lastname\"\n                                    value={userData ? userData.lastname : ''} onChange={(e) => setUserData({ ...userData, lastname: e.target.value })} />\n                            </div>\n\n                            <div className=\"input-field\">\n                                <label htmlFor=\"email\"></label>\n                                <input name=\"email\" type=\"email\" id=\"email\"\n                                    value={userData ? userData.email : ''} onChange={(e) => setUserData({ ...userData, email: e.target.value })} />\n                            </div>\n\n                            <div className=\"input-field\">\n                                <label htmlFor=\"bio\"></label>\n                                <textarea id=\"bio\" cols=\"30\" rows=\"10\"\n                                    value={userData ? userData.bio : ''} onChange={(e) => setUserData({ ...userData, bio: e.target.value })}></textarea>\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"city\"></label>\n                                <input name=\"city\" type=\"text\" id=\"city\"\n                                    value={userData ? userData.city : ''} onChange={(e) => setUserData({ ...userData, city: e.target.value })} />\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"telephone\"></label>\n                                <input name=\"telephone\" type=\"text\" id=\"telephone\"\n                                    value={userData ? userData.telephone : ''} onChange={(e) => setUserData({ ...userData, telephone: e.target.value })} />\n                            </div>\n\n                            <button className=\"btn orange darken-2 z depth-0\" type=\"submit\" onClick={updateHandler}>Update</button>\n\n                        </div>\n                    </form>\n                </Card>\n            </Paper>\n\n        </Container>\n    )\n}\n\nexport default withStyles(styles)(EditProfil)",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"133","replacedBy":"139"},{"ruleId":"135","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":16,"column":13,"nodeType":"143","endLine":16,"endColumn":75},{"ruleId":"141","severity":1,"message":"144","line":18,"column":17,"nodeType":"143","endLine":18,"endColumn":43},{"ruleId":"145","severity":1,"message":"146","line":108,"column":12,"nodeType":"147","messageId":"148","endLine":108,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":137,"column":8,"nodeType":"151","endLine":137,"endColumn":10,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":185,"column":20,"nodeType":"143","endLine":185,"endColumn":63},{"ruleId":"153","severity":1,"message":"154","line":268,"column":34,"nodeType":"143","endLine":268,"endColumn":81},{"ruleId":"145","severity":1,"message":"155","line":65,"column":66,"nodeType":"147","messageId":"148","endLine":65,"endColumn":71},{"ruleId":"145","severity":1,"message":"156","line":65,"column":73,"nodeType":"147","messageId":"148","endLine":65,"endColumn":81},{"ruleId":"149","severity":1,"message":"157","line":95,"column":8,"nodeType":"151","endLine":95,"endColumn":10,"suggestions":"158"},{"ruleId":"149","severity":1,"message":"159","line":11,"column":8,"nodeType":"151","endLine":11,"endColumn":13,"suggestions":"160"},{"ruleId":"145","severity":1,"message":"161","line":51,"column":12,"nodeType":"147","messageId":"148","endLine":51,"endColumn":20},{"ruleId":"149","severity":1,"message":"162","line":70,"column":8,"nodeType":"151","endLine":70,"endColumn":10,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":87,"column":46,"nodeType":"166","messageId":"167","endLine":87,"endColumn":47},{"ruleId":"168","severity":1,"message":"169","line":110,"column":57,"nodeType":"170","messageId":"171","endLine":110,"endColumn":59},{"ruleId":"164","severity":1,"message":"165","line":113,"column":47,"nodeType":"166","messageId":"167","endLine":113,"endColumn":48},{"ruleId":"145","severity":1,"message":"172","line":55,"column":15,"nodeType":"147","messageId":"148","endLine":55,"endColumn":23},{"ruleId":null,"fatal":true,"severity":2,"message":"173","line":25,"column":1},{"ruleId":"149","severity":1,"message":"150","line":73,"column":8,"nodeType":"151","endLine":73,"endColumn":10,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":75,"column":5,"nodeType":"177","messageId":"178","endLine":75,"endColumn":14},{"ruleId":"149","severity":1,"message":"162","line":99,"column":8,"nodeType":"151","endLine":99,"endColumn":10,"suggestions":"179"},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],["180"],["181"],["180"],["181"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchShares' and 'getUser'. Either include them or remove the dependency array.","ArrayExpression",["182"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'likes' is assigned a value but never used.","'comments' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["183"],"React Hook useEffect has a missing dependency: 'setFile'. Either include it or remove the dependency array. If 'setFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["184"],"'userData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["185"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'imageUrl' is assigned a value but never used.","Parsing error: Unexpected keyword 'export'\n\n\u001b[0m \u001b[90m 23 | \u001b[39m}\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mdefault\u001b[39m hookFirestore\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m",["186"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["187"],"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"188","fix":"196"},{"desc":"194","fix":"197"},"Update the dependencies array to be: [fetchShares, getUser]",{"range":"198","text":"199"},"Update the dependencies array to be: [loading]",{"range":"200","text":"201"},"Update the dependencies array to be: [setFile, url]",{"range":"202","text":"203"},"Update the dependencies array to be: [getUser]",{"range":"204","text":"205"},{"range":"206","text":"199"},{"range":"207","text":"205"},[3802,3804],"[fetchShares, getUser]",[2563,2565],"[loading]",[264,269],"[setFile, url]",[1866,1868],"[getUser]",[1941,1943],[2410,2412]]
[{"/Users/stella/newvibe/src/index.js":"1","/Users/stella/newvibe/src/reportWebVitals.js":"2","/Users/stella/newvibe/src/App.js":"3","/Users/stella/newvibe/src/components/UploadForm.js":"4","/Users/stella/newvibe/src/navigation/Navbar.js":"5","/Users/stella/newvibe/src/components/users/Profile.js":"6","/Users/stella/newvibe/src/components/Home.js":"7","/Users/stella/newvibe/src/firebase/config.js":"8","/Users/stella/newvibe/src/components/ProgressBar.js":"9","/Users/stella/newvibe/src/hooks/useStorage.js":"10","/Users/stella/newvibe/src/components/auth/SignUp.js":"11","/Users/stella/newvibe/src/components/auth/SignIn.js":"12","/Users/stella/newvibe/src/components/auth/Auth.js":"13","/Users/stella/newvibe/src/components/auth/ForgotPassword.js":"14","/Users/stella/newvibe/src/components/auth/PrivateRoute.js":"15","/Users/stella/newvibe/src/components/sharing/ShareScreen.js":"16","/Users/stella/newvibe/src/components/sharing/PostShare.js":"17","/Users/stella/newvibe/src/redux/actions/shareActions.js":"18","/Users/stella/newvibe/src/hooks/hookFirestore.js":"19","/Users/stella/newvibe/src/redux/reducers/rootReducer.js":"20","/Users/stella/newvibe/src/redux/reducers/shareReducer.js":"21","/Users/stella/newvibe/src/components/sharing/DeleteShare.js":"22","/Users/stella/newvibe/src/components/users/StaticProfile.js":"23","/Users/stella/newvibe/src/components/sharing/EditProfil.js":"24"},{"size":1033,"mtime":1619699599000,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1610503114000,"results":"27","hashOfConfig":"26"},{"size":1347,"mtime":1626465204000,"results":"28","hashOfConfig":"26"},{"size":1014,"mtime":1617787530000,"results":"29","hashOfConfig":"26"},{"size":1240,"mtime":1626906585000,"results":"30","hashOfConfig":"26"},{"size":11958,"mtime":1626643736000,"results":"31","hashOfConfig":"26"},{"size":4356,"mtime":1626908171000,"results":"32","hashOfConfig":"26"},{"size":921,"mtime":1625832331000,"results":"33","hashOfConfig":"26"},{"size":416,"mtime":1616876036000,"results":"34","hashOfConfig":"26"},{"size":946,"mtime":1619433887000,"results":"35","hashOfConfig":"26"},{"size":4712,"mtime":1626549842000,"results":"36","hashOfConfig":"26"},{"size":2651,"mtime":1626549720000,"results":"37","hashOfConfig":"26"},{"size":650,"mtime":1624994084000,"results":"38","hashOfConfig":"26"},{"size":2383,"mtime":1625135631000,"results":"39","hashOfConfig":"26"},{"size":543,"mtime":1617138753000,"results":"40","hashOfConfig":"26"},{"size":3557,"mtime":1626549662000,"results":"41","hashOfConfig":"26"},{"size":4476,"mtime":1626641119000,"results":"42","hashOfConfig":"26"},{"size":1002,"mtime":1626643563000,"results":"43","hashOfConfig":"26"},{"size":658,"mtime":1619435985000,"results":"44","hashOfConfig":"26"},{"size":346,"mtime":1621514831000,"results":"45","hashOfConfig":"26"},{"size":481,"mtime":1626644349000,"results":"46","hashOfConfig":"26"},{"size":3568,"mtime":1626568303000,"results":"47","hashOfConfig":"26"},{"size":4436,"mtime":1626640765000,"results":"48","hashOfConfig":"26"},{"size":6489,"mtime":1626550620000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1jbua7m",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},"/Users/stella/newvibe/src/index.js",[],["108","109"],"/Users/stella/newvibe/src/reportWebVitals.js",[],["110","111"],"/Users/stella/newvibe/src/App.js",[],"/Users/stella/newvibe/src/components/UploadForm.js",[],["112","113"],"/Users/stella/newvibe/src/navigation/Navbar.js",["114","115"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n\n\nconst Navbar = () => {\n\n    useEffect(() => {\n        const M = window.M;\n        var sidenav = document.querySelectorAll(\".sidenav\");\n        M.Sidenav.init(sidenav, {});\n    }, []);\n\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n            <div className=\"container\">\n                <a className=\"brand-logo\">NewVibe</a>\n                <ul className=\"right  hide-on-med-and-down\">\n                    <li><Link to='/'>Home</Link></li>\n                    <li><Link to='/SignUp'>Sign Up</Link></li>\n                    <li><Link to='/SignIn'>Sign In</Link></li>\n                    <li><Link to='/Profile'>Profile</Link></li>\n                </ul>\n\n            </div>\n\n            <ul className=\"sidenav\" id=\"mobile-demo\">\n                <li><Link to='/'>Home</Link></li>\n                <li><Link to='/SignUp'>Sign Up</Link></li>\n                <li><Link to='/SignIn'>Sign In</Link></li>\n                <li><Link to='/Profile'>Profile</Link></li>\n            </ul>\n        </nav>\n\n\n    )\n}\n\n\n\n\n\nexport default Navbar","/Users/stella/newvibe/src/components/users/Profile.js",["116","117","118","119"],"import React, { useState, useContext, useEffect, Fragment } from 'react'\nimport { Container, Card, Typography, Paper, Button } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditIcon from '@material-ui/icons/Edit'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport firebase from \"../../firebase/config\"\nimport { projectFirestore } from '../../firebase/config'\nimport { projectStorage } from '../../firebase/config'\nimport { connect } from 'react-redux'\nimport { AuthContext } from '../auth/Auth'\nimport { Link } from 'react-router-dom'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport LocationOn from '@material-ui/icons/LocationOn'\nimport CallIcon from '@material-ui/icons/Call';\nimport blue from '@material-ui/core/colors/blue'\nimport ShareScreen from '../sharing/ShareScreen'\n\n\nconst styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(400 + theme.spacing(3) * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        }\n    },\n\n    paper: {\n        marginTop: theme.spacing(8),\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        display: 'flex',\n        maxWidth: 400,\n        flexDirection: 'column',\n        alignItems: 'center',\n        palette: {\n            primary: blue,\n        },\n        '& .image-wrap': {\n            textAlign: 'center',\n            position: 'relative',\n\n            '& button': {\n                position: 'absolute',\n                top: '80%',\n                left: '70%'\n            }\n        },\n\n\n        '& .user-image': {\n            width: 200,\n            height: 200,\n            objectFit: 'cover',\n            maxWidth: '100%',\n            borderRadius: '50%'\n        },\n        '& .profile-details': {\n            textAlign: 'center',\n            '& span, svg': {\n                verticalAlign: 'middle'\n            }\n        },\n\n\n        '& .options': {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center'\n        }\n    },\n    card: {\n        display: 'flex',\n        position: 'relative',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 20,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n\n\n})\n\nconst Profile = props => {\n    const { classes } = props\n\n    const { currentUser } = useContext(AuthContext)\n    const [shares, setShares] = useState([])\n    const [userData, setUserData] = useState()\n    const [userImg, setUserImg] = useState()\n    const [file, setFile] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [progress, setProgress] = useState(0)\n    const [error, setError] = useState(null)\n    const [url, setUrl] = useState(null)\n\n    const types = ['image/png', 'image/jpeg']\n\n    const onSignout = async () => {\n        await firebase.auth().signOut\n    }\n\n    const collectionRef = projectFirestore.collection('shares')\n\n\n\n    const getUser = async () => {\n        projectFirestore\n            .collection('users')\n            .doc(currentUser.uid)\n            .get()\n            .then((documentSnapshot) => {\n                if (documentSnapshot.exists) {\n                    console.log('User Data', documentSnapshot.data())\n                    setUserData(documentSnapshot.data())\n                }\n            })\n    }\n\n    useEffect(() => {\n        getUser()\n        fetchShares()\n    }, [])\n\n    //Update User Image\n    const collectionUser = projectFirestore.collection('users')\n\n    const updateHandler = async () => {\n        let imageUrl = await handleUploadPicture()\n        if (imageUrl == null && userData.userImg) {\n            imageUrl = userData.userImg\n        }\n\n\n\n        collectionUser\n            .doc(currentUser.uid)\n            .update({\n                userImg: imageUrl,\n\n            })\n            .then(() => {\n                console.log('User Image Updated!')\n                alert('Profile image updated!')\n\n            })\n            .catch((error) => {\n                console.log('Something went wrong', error)\n            })\n        setUserImg(userImg)\n        return userImg\n    }\n\n\n\n    const handleImageChange = (e) => {\n        let selected = e.target.files[0]\n\n        if (selected && types.includes(selected.type)) {\n            setFile(selected)\n            setError('')\n        } else {\n            setFile(null)\n            setError('Please select an image file (png or jpeg')\n        }\n    }\n\n\n    const handleUploadPicture = async () => {\n        if (file == null) {\n            return <img src='https://via.placeholder.com/150'></img>\n        }\n        const storageRef = projectStorage.ref(`user-images/${file.name}`)\n        storageRef.put(file)\n            .on('state_changed', (snapshot) => {\n                let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                setProgress(\n                    Math.round(percentage))\n            }, (err) => {\n                setError(err)\n            }, async () => {\n                const url = await storageRef.getDownloadURL()\n                setUrl(url)\n\n            }\n\n            )\n        return { url }\n    }\n\n\n    //Display shares for connected user\n    const fetchShares = async () => {\n        try {\n            const list = []\n            await collectionRef\n                .where('userId', '==', currentUser.uid)\n                .get()\n                .then((querySnapshot) => {\n                    querySnapshot.forEach((doc) => {\n                        const {\n                            userId,\n                            url,\n                            title,\n                            content,\n                            likes,\n                            comments\n                        } = doc.data()\n                        list.push({\n                            shareId: doc.id,\n                            userId,\n                            url,\n                            title,\n                            content,\n                            likes,\n                            comments\n                        })\n                    })\n                })\n            setShares(list)\n            if (loading) {\n                setLoading(false)\n            }\n            console.log('Shares: ', shares)\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n\n    if (loading) return <CircularProgress />\n\n    return (\n        <Container component='main' maxWidth=\"xm\">\n            <Card className={classes.card}>\n                <Paper className={classes.paper}\n                    color=\"primary\">\n                    <h3>Newvibe</h3>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Welcome {userData ? userData.firstname : 'Your Name'}\n                        <br />\n                        {userData ? userData.lastname : 'Your Lastname'}\n                    </Typography>\n\n                    <h4>Share amazing memories</h4>\n\n                    <div className=\"img-wrap\">\n                        <div className=\"user-image\">\n\n                            {url !== null ? <img src={userData ? userData.userImg : 'https://via.placeholder.com/150'} alt='upload-img' className=\"profile-image\"\n                                style={{ width: 145, height: 150, alignSelf: \"center\" }}\n\n                            /> : <img src={'https://via.placeholder.com/150'} />}\n                            <input type=\"file\" onChange={handleImageChange} />\n\n                            <Tooltip title=\"Edit profile image\" placement=\"top\">\n                                <IconButton onClick={handleUploadPicture} className=\"button\">\n                                    <EditIcon color=\"primary\" />\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n\n                        <div className=\"upload-progress\"><circularProgress /><Typography>{progress} % uploaded!</Typography></div>\n\n\n\n                        <Button onClick={updateHandler}\n                            className={classes.submit}\n                            type=\"submit\"\n                            fullwidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Update Profil Picture\n                        </Button>\n                    </div>\n\n                    <div className=\"profile-details\">\n                        <Fragment>\n                            {userData ? userData.bio :\n                                <Typography variant=\"body1\">\n                                    BIO\n                                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium odio dolor odit natus unde consequatur magni recusandae ipsum sequi illo similique atque quam commodi quasi modi quas tempore, suscipit ea?\n                                </Typography>\n                            }\n                        </Fragment>\n                        <br />\n                        <Fragment>\n                            <LocationOn color=\"primary\" />\n                            <span>{userData ? userData.city : 'City'}</span>\n\n                        </Fragment>\n\n                        <Typography variant=\"body2\">\n                            <CallIcon color=\"primary\" />\n                            {userData ? userData.telephone : 'telephone'}\n                        </Typography>\n                        <hr />\n\n                        <Typography>{shares.length} Shares</Typography>\n\n                    </div>\n\n\n                    <Fragment>\n                        <div className=\"options\">\n                            <Button\n                                type=\"submit\"\n                                fullwidth\n                                variant=\"contained\"\n                                component={Link}\n                                color=\"primary\"\n                                to=\"/PostShare\"\n                                className={classes.submit}\n\n                            >\n                                Post Share\n                            </Button>\n\n\n                            <Button\n                                type=\"submit\"\n                                fullwidth\n                                variant=\"contained\"\n                                component={Link}\n                                color=\"primary\"\n                                to=\"SignIn\"\n                                className={classes.submit}\n                                onClick={onSignout}\n                            >\n                                Signout\n                            </Button>\n\n\n                            <Button\n                                type=\"submit\"\n                                fullwidth\n                                variant=\"contained\"\n                                component={Link}\n                                color=\"primary\"\n                                to=\"/EditProfil\"\n                                className={classes.submit}\n\n                            >\n                                Edit Profil\n                            </Button>\n                        </div></Fragment>\n                </Paper>\n            </Card>\n            <Card className={classes.card}>\n                <ShareScreen shares={shares} />\n            </Card>\n\n\n        </Container>\n\n\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.firebase.auth.uid\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(Profile))\n","/Users/stella/newvibe/src/components/Home.js",["120","121","122"],"/Users/stella/newvibe/src/firebase/config.js",[],"/Users/stella/newvibe/src/components/ProgressBar.js",["123"],"import React, { useEffect } from 'react'\nimport useStorage from '../hooks/useStorage'\n\nconst ProgressBar = ({ file, setFile }) => {\n    const { url, progress } = useStorage(file)\n\n    useEffect(() => {\n        if (url) {\n            setFile(null)\n        }\n    }, [url], setFile)\n\n    return (\n        <div className=\"progress-bar\" style={{ width: progress + '%' }}>progress</div>\n    )\n}\n\nexport default ProgressBar","/Users/stella/newvibe/src/hooks/useStorage.js",[],"/Users/stella/newvibe/src/components/auth/SignUp.js",[],"/Users/stella/newvibe/src/components/auth/SignIn.js",[],"/Users/stella/newvibe/src/components/auth/Auth.js",[],"/Users/stella/newvibe/src/components/auth/ForgotPassword.js",[],"/Users/stella/newvibe/src/components/auth/PrivateRoute.js",[],"/Users/stella/newvibe/src/components/sharing/ShareScreen.js",["124","125","126","127","128"],"import React, { useContext, useEffect, useState, Fragment } from 'react'\nimport { AuthContext } from '../auth/Auth'\nimport { projectFirestore } from '../../firebase/config'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline'\nimport DeleteShare from './DeleteShare'\nimport { Link } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n\nconst styles = {\n    card: {\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 20,\n    },\n\n    userimage: {\n        minWidth: 150\n    },\n\n    shareimage: {\n        minWidth: 150\n    },\n\n    content: {\n        padding: 25,\n        objectFit: 'cover'\n    }\n\n}\n\n\n\nconst ShareScreen = (props) => {\n\n    const { classes } = props\n    const shares = props.shares\n\n    const { currentUser } = useContext(AuthContext)\n    const [likes, setLikes] = useState(1)\n\n    const [userData, setUserData] = useState(null)\n\n    const getUser = async () => {\n        await projectFirestore\n            .collection('users')\n            .doc(currentUser.uid)\n            .get()\n            .then((docSnapshot) => {\n                if (docSnapshot.exists) {\n                    console.log('User Data', docSnapshot.data())\n                    setUserData(docSnapshot.data())\n                }\n            })\n    }\n\n    useEffect(() => {\n        getUser()\n    }, [])\n\n\n    return (\n\n        <Fragment>\n\n            <div className=\"card-sharescreen\" >\n\n                {shares.map(share => (\n\n                    <Card className={classes.card} key={share.shareId}>\n\n                        <CardContent >\n\n                            <Typography variant=\"h5\"\n                                component={Link}\n                                to={'/shares', { shareId: share.shareId }}\n                            >{share.title}</Typography>\n\n                            <Typography variant=\"body1\">{share.content}</Typography>\n\n                            <Button tip=\"like\" onClick={() => setLikes(likes + 1)}>\n                                {likes}\n                                <FavoriteIcon color=\"primary\" />\n                            </Button>\n\n                            <Button tip=\"like\" onClick={() => setLikes(likes - 1)}>\n                                {likes}\n                                <FavoriteBorderIcon color=\"primary\" />\n                            </Button>\n\n                            <ChatBubbleOutlineIcon color=\"primary\" />\n\n                        </CardContent>\n\n                        <CardMedia>\n                            <img src={share.url} alt=\"profile\" className={classes.shareimage} height=\"170\" width=\"150\" />\n                        </CardMedia>\n\n                        {currentUser.uid == share.userId ?\n                            <DeleteShare key={share.shareId}\n                                component={Link}\n                                to={'/Profile', { userId: share.userId }} />\n                            : null}\n\n                    </Card>\n\n                ))}\n\n\n            </div>\n\n\n\n        </Fragment>\n\n    )\n\n}\n\nexport default (withStyles(styles)(ShareScreen))","/Users/stella/newvibe/src/components/sharing/PostShare.js",["129"],"import React, { useState, useContext } from 'react'\nimport { Container } from '@material-ui/core'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport bgImg from '../images/imagebg.jpg'\nimport { projectStorage } from '../../firebase/config'\nimport { postShare } from '../../redux/actions/shareActions'\nimport { connect } from 'react-redux'\nimport { AuthContext } from '../auth/Auth'\n\n\n\nconst styles = (theme) => ({\n    main: {\n        width: 'auto',\n        display: 'block',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(400 + theme.spacing(3) * 2)]: {\n            width: 400,\n            marginleft: 'auto',\n            marginLight: 'auto',\n        },\n        postshare: {\n            '& .img-wrap': {\n                textAlign: 'center',\n                position: 'relative'\n            },\n        },\n\n        submit: {\n            marginTop: theme.spacing(3),\n            marginBottom: theme.spacing(3),\n        }\n    }\n})\n\nconst PostShare = (props) => {\n    const { classes } = props\n\n    const { currentUser } = useContext(AuthContext)\n\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n    const [file, setFile] = useState(null)\n    const [error, setError] = useState(null)\n    const [progress, setProgress] = useState(0)\n    const [url, setUrl] = useState(null)\n\n    const types = ['image/png', 'image/jpeg']\n\n    const handleSubmit = async (e) => {\n\n        e.preventDefault()\n\n        const imageUrl = await uploadHandler()\n\n        const share = {\n            userId: currentUser.uid,\n            url: url,\n            createdAt: new Date(),\n            title: title,\n            content: content\n        }\n\n        props.postShare(share)\n        props.history.push('/')\n    }\n\n    const changeHandler = (e) => {\n        let selected = e.target.files[0]\n\n        if (selected && types.includes(selected.type)) {\n            setFile(selected)\n            setError('')\n        } else {\n            setFile(null)\n            setError('Please select an image file (png or jpeg')\n        }\n    }\n\n\n    const uploadHandler = async () => {\n        const storageRef = projectStorage.ref(`share-images/${file.name}`)\n        storageRef.put(file)\n            .on('state_changed', (snapshot) => {\n                let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                setProgress(\n                    Math.round(percentage))\n            }, (err) => {\n                setError(err)\n            }, async () => {\n                const url = await storageRef.getDownloadURL()\n                setUrl(url)\n\n            }\n\n            )\n        return { progress, url, error }\n    }\n\n\n    return (\n        <Container component='main' maxWidth=\"xs\">\n\n            <h1>Share</h1>\n\n            <h2>Here are the Prop Types</h2>\n\n            <h5>Post Share</h5>\n            <div className={classes.postshare}>\n                <div className=\"img-wrap\">\n                    <img src={url || bgImg} alt='upload-img' height=\"300\" width=\"400\" />\n                    <input type=\"file\" onChange={changeHandler} />\n                    <button onClick={uploadHandler}>Upload</button>\n\n                </div>\n\n                <div className=\"progress-bar\">{progress} % uploaded.</div>\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"post-share\">\n                        <div className=\"input-field\">\n                            <label htmlFor=\"title\">My Share</label>\n                            <input type=\"text\" id=\"title\" value={title}\n                                onChange={(e) => setTitle(e.target.value)} />\n                        </div>\n\n                        <div className=\"input-field\">\n                            <label htmlFor=\"content\">Enter story</label>\n                            <textarea id=\"content\" cols=\"30\" rows=\"10\" value={content}\n                                onChange={(e) => setContent(e.target.value)}>Enter Comment</textarea>\n                        </div>\n\n                        <button className=\"btn orange darken-2 z depth-0\" type=\"submit\">Add Sharing</button>\n\n                    </div>\n                </form>\n            </div>\n\n        </Container>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        postShare: (share) => dispatch(postShare(share))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(PostShare))\n","/Users/stella/newvibe/src/redux/actions/shareActions.js",[],"/Users/stella/newvibe/src/hooks/hookFirestore.js",["130"],"/Users/stella/newvibe/src/redux/reducers/rootReducer.js",[],"/Users/stella/newvibe/src/redux/reducers/shareReducer.js",[],"/Users/stella/newvibe/src/components/sharing/DeleteShare.js",[],"/Users/stella/newvibe/src/components/users/StaticProfile.js",["131","132"],"import React, { useState, useContext, useEffect, Fragment } from 'react'\nimport { Typography, Paper } from '@material-ui/core'\nimport { projectFirestore } from '../../firebase/config'\nimport { AuthContext } from '../auth/Auth'\nimport MuiLink from '@material-ui/core/Link'\nimport LocationOn from '@material-ui/icons/LocationOn'\nimport CallIcon from '@material-ui/icons/Call';\nimport { Link } from 'react-router-dom'\nimport UsrImg from '../images/user_img.png'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\n\nconst styles = (theme) => ({\n    paper: {\n        padding: 20,\n        marginTop: 50,\n        marginLeft: 30,\n\n    },\n\n    profile: {\n        '& .image-wrapper': {\n            textAlign: 'center',\n            position: 'relative'\n        },\n        '& .profile-image': {\n            width: 200,\n            height: 230,\n            objectFit: 'cover',\n            maxWidth: '100%',\n            borderRadius: '50%'\n        }\n    }\n\n})\n\ndayjs.extend(relativeTime)\n\nconst StaticProfile = (props) => {\n\n\n    const { classes } = props\n\n    const { currentUser } = useContext(AuthContext)\n    const [shares, setShares] = useState([])\n    const [userData, setUserData] = useState()\n\n    const [loading, setLoading] = useState(false)\n\n    const collectionRef = projectFirestore.collection('shares')\n\n\n\n    const getUser = async () => {\n        projectFirestore\n            .collection('users')\n            .doc(currentUser.uid)\n            .get()\n            .then((documentSnapshot) => {\n                if (documentSnapshot.exists) {\n                    console.log('User Data', documentSnapshot.data())\n                    setUserData(documentSnapshot.data())\n                }\n            })\n    }\n\n    useEffect(() => {\n        getUser()\n        fetchShares()\n    }, [])\n\n    {/** */ }\n    const fetchShares = async () => {\n        try {\n            const list = []\n            await collectionRef\n                .where('userId', '==', currentUser.uid)\n                .get()\n                .then((querySnapshot) => {\n                    querySnapshot.forEach((doc) => {\n                        const {\n                            userId,\n                            url,\n                            title,\n                            content,\n                            likes,\n                            comments\n                        } = doc.data()\n                        list.push({\n                            shareId: doc.id,\n                            userId,\n                            url,\n                            title,\n                            content,\n                            likes,\n                            comments\n                        })\n                    })\n                })\n            setShares(list)\n            if (loading) {\n                setLoading(false)\n            }\n            console.log('Shares: ', shares)\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n\n\n    return (\n\n        <Paper className={classes.paper}>\n            <div className={classes.profile}>\n                <div className=\"image-wapper\">\n\n                    <img src={userData ? userData.userImg.url : UsrImg} alt=\"profile\" className=\"profile-image\" />\n                </div>\n                <hr />\n                <div className=\"profile-details\">\n                    <MuiLink\n                        component={Link}\n                        to=\"/Profile\"\n                        color=\"primary\"\n                        variant=\"h5\"\n                    >\n                        {userData ? userData.firstname : 'test'}\n                    </MuiLink>\n                    <hr />\n                    <Typography variant=\"body2>\">\n                        {userData ? userData.bio : 'No Bio'} </Typography>\n                    <hr />\n\n                    <Fragment>\n                        <LocationOn color=\"primary\" /> <span>{userData ? userData.city : 'City'}</span>\n                    </Fragment>\n\n\n                    <Typography variant=\"body2\">\n                        <CallIcon color=\"primary\" />\n                        {userData ? userData.telephone : 'telephone'}\n                    </Typography>\n                    <Typography>{shares.length} Shares</Typography>\n                </div>\n\n            </div>\n        </Paper>\n    )\n}\nexport default withStyles(styles)(StaticProfile)","/Users/stella/newvibe/src/components/sharing/EditProfil.js",["133"],"import React, { useState, useEffect, useContext } from 'react'\nimport { projectFirestore } from '../../firebase/config'\nimport { AuthContext } from '../auth/Auth'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport { Container, Paper, Card, Typography } from '@material-ui/core'\n\n\nconst styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(400 + theme.spacing(3) * 2)]: {\n            width: 400,\n            marginleft: 'auto',\n            marginLight: 'auto',\n        }\n    },\n    card: {\n        position: 'relative',\n        padding: 20,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 20,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& .image-wrap': {\n            textAlign: 'center',\n            position: 'relative',\n\n            '& button': {\n                position: 'absolute',\n                top: '80%',\n                left: '70%'\n            }\n        },\n\n        '& .user-image': {\n            width: 200,\n            height: 200,\n            objectFit: 'cover',\n            maxWidth: '100%',\n            borderRadius: '50%'\n        },\n        '& .profile-details': {\n            textAlign: 'center',\n            '& span, svg': {\n                verticalAlign: 'middle'\n            }\n        },\n\n        '& .options': {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center'\n        }\n    },\n\n    submit: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n\n\n})\n\n\n\nconst EditProfil = (props) => {\n\n    const { classes } = props\n\n    const { currentUser } = useContext(AuthContext)\n\n    const [userData, setUserData] = useState(null)\n\n    const getUser = async () => {\n        projectFirestore\n            .collection('users')\n            .doc(currentUser.uid)\n            .get()\n            .then((documentSnapshot) => {\n                if (documentSnapshot.exists) {\n                    console.log('User Data', documentSnapshot.data())\n                    setUserData(documentSnapshot.data())\n                }\n            })\n    }\n\n    useEffect(() => {\n        getUser()\n\n    }, [])\n\n    //Update User Data\n    const collectionUser = projectFirestore.collection('users')\n\n    const updateHandler = async () => {\n\n        collectionUser\n            .doc(currentUser.uid)\n            .update({\n                firstname: userData.firstname,\n                lastname: userData.lastname,\n                email: userData.email,\n                bio: userData.bio,\n                phone: userData.telephone,\n                city: userData.city,\n\n\n            })\n            .then(() => {\n                console.log('User Updated!')\n                alert('Profile updated!')\n                props.history.push('/')\n            })\n            .catch((error) => {\n                console.log('Something went wrong', error)\n            })\n    }\n\n\n\n    return (\n        <Container component='main' maxWidth=\"xm\">\n            <Card className={classes.card}>\n\n                <Paper className={classes.paper}>\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                        {userData ? userData.firstname : 'Your Name'}\n                        <br />\n                        {userData ? userData.lastname : 'Your Lastname'}\n                    </Typography>\n\n                </Paper>\n\n            </Card>\n\n            <Paper>\n                <Card className={classes.card}>\n                    <form onSubmit={e => e.preventDefault() && false}>\n                        <div className=\"update-profile\">\n\n                            <div className=\"input-field\">\n                                <label htmlFor=\"firstname\"></label>\n                                <input name=\"firstname\" type=\"text\" id=\"firstname\"\n                                    value={userData ? userData.firstname : ''} onChange={(e) => setUserData({ ...userData, firstname: e.target.value })} />\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"lastname\"></label>\n                                <input name=\"lastname\" type=\"text\" id=\"lastname\"\n                                    value={userData ? userData.lastname : ''} onChange={(e) => setUserData({ ...userData, lastname: e.target.value })} />\n                            </div>\n\n                            <div className=\"input-field\">\n                                <label htmlFor=\"email\"></label>\n                                <input name=\"email\" type=\"email\" id=\"email\"\n                                    value={userData ? userData.email : ''} onChange={(e) => setUserData({ ...userData, email: e.target.value })} />\n                            </div>\n\n                            <div className=\"input-field\">\n                                <label htmlFor=\"bio\"></label>\n                                <textarea id=\"bio\" cols=\"30\" rows=\"10\"\n                                    value={userData ? userData.bio : ''} onChange={(e) => setUserData({ ...userData, bio: e.target.value })}></textarea>\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"city\"></label>\n                                <input name=\"city\" type=\"text\" id=\"city\"\n                                    value={userData ? userData.city : ''} onChange={(e) => setUserData({ ...userData, city: e.target.value })} />\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"telephone\"></label>\n                                <input name=\"telephone\" type=\"text\" id=\"telephone\"\n                                    value={userData ? userData.telephone : ''} onChange={(e) => setUserData({ ...userData, telephone: e.target.value })} />\n                            </div>\n\n                            <button className=\"btn orange darken-2 z depth-0\" type=\"submit\" onClick={updateHandler}>Update</button>\n\n                        </div>\n                    </form>\n                </Card>\n            </Paper>\n\n        </Container>\n    )\n}\n\nexport default withStyles(styles)(EditProfil)",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"134","replacedBy":"140"},{"ruleId":"136","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":16,"column":13,"nodeType":"144","endLine":16,"endColumn":75},{"ruleId":"142","severity":1,"message":"145","line":18,"column":17,"nodeType":"144","endLine":18,"endColumn":43},{"ruleId":"146","severity":1,"message":"147","line":108,"column":12,"nodeType":"148","messageId":"149","endLine":108,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":137,"column":8,"nodeType":"152","endLine":137,"endColumn":10,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":185,"column":20,"nodeType":"144","endLine":185,"endColumn":63},{"ruleId":"154","severity":1,"message":"155","line":268,"column":34,"nodeType":"144","endLine":268,"endColumn":81},{"ruleId":"146","severity":1,"message":"156","line":65,"column":66,"nodeType":"148","messageId":"149","endLine":65,"endColumn":71},{"ruleId":"146","severity":1,"message":"157","line":65,"column":73,"nodeType":"148","messageId":"149","endLine":65,"endColumn":81},{"ruleId":"150","severity":1,"message":"158","line":95,"column":8,"nodeType":"152","endLine":95,"endColumn":10,"suggestions":"159"},{"ruleId":"150","severity":1,"message":"160","line":11,"column":8,"nodeType":"152","endLine":11,"endColumn":13,"suggestions":"161"},{"ruleId":"146","severity":1,"message":"162","line":51,"column":12,"nodeType":"148","messageId":"149","endLine":51,"endColumn":20},{"ruleId":"150","severity":1,"message":"163","line":68,"column":8,"nodeType":"152","endLine":68,"endColumn":10,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":85,"column":46,"nodeType":"167","messageId":"168","endLine":85,"endColumn":47},{"ruleId":"169","severity":1,"message":"170","line":108,"column":42,"nodeType":"171","messageId":"172","endLine":108,"endColumn":44},{"ruleId":"165","severity":1,"message":"166","line":111,"column":47,"nodeType":"167","messageId":"168","endLine":111,"endColumn":48},{"ruleId":"146","severity":1,"message":"173","line":55,"column":15,"nodeType":"148","messageId":"149","endLine":55,"endColumn":23},{"ruleId":null,"fatal":true,"severity":2,"message":"174","line":25,"column":1},{"ruleId":"150","severity":1,"message":"151","line":71,"column":8,"nodeType":"152","endLine":71,"endColumn":10,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":73,"column":5,"nodeType":"178","messageId":"179","endLine":73,"endColumn":14},{"ruleId":"150","severity":1,"message":"163","line":99,"column":8,"nodeType":"152","endLine":99,"endColumn":10,"suggestions":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],["181"],["182"],["181"],["182"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchShares' and 'getUser'. Either include them or remove the dependency array.","ArrayExpression",["183"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'likes' is assigned a value but never used.","'comments' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has a missing dependency: 'setFile'. Either include it or remove the dependency array. If 'setFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["185"],"'userData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["186"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'imageUrl' is assigned a value but never used.","Parsing error: Unexpected keyword 'export'\n\n\u001b[0m \u001b[90m 23 | \u001b[39m}\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mdefault\u001b[39m hookFirestore\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m",["187"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["188"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"189","fix":"197"},{"desc":"195","fix":"198"},"Update the dependencies array to be: [fetchShares, getUser]",{"range":"199","text":"200"},"Update the dependencies array to be: [loading]",{"range":"201","text":"202"},"Update the dependencies array to be: [setFile, url]",{"range":"203","text":"204"},"Update the dependencies array to be: [getUser]",{"range":"205","text":"206"},{"range":"207","text":"200"},{"range":"208","text":"206"},[3802,3804],"[fetchShares, getUser]",[2563,2565],"[loading]",[264,269],"[setFile, url]",[1791,1793],"[getUser]",[1864,1866],[2410,2412]]